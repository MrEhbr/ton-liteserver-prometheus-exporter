name: Release
on:
  push:
    branches:
      - master
      - main

jobs:
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic 
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.golang }}
      - name: Cache Go modules
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-v1-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ matrix.golang }}-v1-
      - name: Login to DockerHub
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run GoReleaser
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: goreleaser/goreleaser-action@v6.0.0
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
